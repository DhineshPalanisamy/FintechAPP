       IDENTIFICATION DIVISION.
       PROGRAM-ID. CBSCSREV.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
        01 WS-ERROR-CODE PIC 9(12).
        01 WS-TRAN-AMOUNT-T PIC S9(10)V9(2).
        01 WS-ACCOUNT-NO-T PIC S9(18).
        01 WS-TIMESTAMP PIC X(26).
        01 WS-DATETIME PIC X(21).
        01 WS-TRANID PIC X(16).
           EXEC SQL
           INCLUDE CBSMST
           END-EXEC.
           EXEC SQL
           INCLUDE CBSBAL
           END-EXEC.
           EXEC SQL
           INCLUDE CBSHIS
           END-EXEC.
           EXEC SQL
           INCLUDE SQLCA
           END-EXEC.
       LINKAGE SECTION.
       01 DFHCOMMAREA.
           02 CSREVREQ.
           COPY CSREVREQ.
           02 CSREVRES REDEFINES CSREVREQ.
           COPY CSREVRES.
       PROCEDURE DIVISION.
      *     MOVE LOW-VALUES TO DCLCBS-ACCT-MSTR-DTFGL.
           MOVE FUNCTION CURRENT-DATE TO WS-DATETIME.
           DISPLAY WS-DATETIME.

           DISPLAY "BEGIN".
           DISPLAY "WS-ACCOUNT-NO" ACCOUNT-NO.
           DISPLAY "TRAN-AMOUNT" TRAN-AMOUNT.
           DISPLAY "TRANSACTION-ID" TRANSACTION-ID.
           MOVE TRAN-AMOUNT TO  WS-TRAN-AMOUNT-T.
           MOVE ACCOUNT-NO TO WS-ACCOUNT-NO-T.
           MOVE TRANSACTION-ID TO WS-TRANID.
           DISPLAY "WS-TRANID" WS-TRANID.
           DISPLAY "WS-ACCOUNT-NO-T" WS-ACCOUNT-NO-T.
           MOVE SPACE TO CUSTOMER-NAME.
           MOVE SPACE TO SYS-DATE.
           MOVE SPACE TO SYS-TIME.
           COMPUTE CUSTOMER-ID = 0.
           MOVE 0 TO AVAILABLE-BALANCE.
           MOVE 0 TO HOLD-BALANCE.
           MOVE 0 TO LEDGER-BL.

           PERFORM 1000-VALIDATION-PARA THRU 1000-VALIDATION-PARA-EXIT.
           PERFORM 2000-DATA-ACCES-PARA THRU 2000-DATA-ACCES-PARA-EXIT.
           PERFORM 5000-BUSINES-VAL-PRA THRU 5000-BUSINES-VAL-PRA-EXIT.
           PERFORM 9000-MAIN-PARA THRU 9000-MAIN-PARA-EXIT.

        1000-VALIDATION-PARA.
           IF WS-ACCOUNT-NO-T = 0 THEN
              MOVE "ACCOUNT NUMBER SHOULD NOT BE NULL" TO MESSAGES
              EXEC CICS RETURN END-EXEC
           END-IF.
           IF WS-TRAN-AMOUNT-T = 0 THEN
              MOVE "DEBIT AMOUNT SHOULD NOT BE NULL" TO MESSAGES
              EXEC CICS RETURN END-EXEC
           END-IF.
           DISPLAY "WS-MESSAGES:" MESSAGES.
           IF WS-TRANID IS EQUAL TO SPACES THEN
              MOVE "TRAN AMOUNT SHOULD NOT BE NULL" TO MESSAGES
              EXEC CICS RETURN END-EXEC
           END-IF.
           DISPLAY "WS-MESSAGES:" MESSAGES.
        1000-VALIDATION-PARA-EXIT.
            EXIT.

        2000-DATA-ACCES-PARA.
           COMPUTE H1-ACCOUNT-NUMBER = WS-ACCOUNT-NO-T.
           EXEC SQL
            SELECT * INTO :DCLCBS-ACCT-MSTR-DTL FROM CBS_ACCT_MSTR_DTL
            WHERE ACCOUNT_NUMBER= :H1-ACCOUNT-NUMBER
            END-EXEC.

            DISPLAY "SQLCODE:" SQLCODE

            EVALUATE SQLCODE
              WHEN 0
               DISPLAY H1-ACCOUNT-NUMBER
               DISPLAY H1-PAYMENT-LIMIT
               DISPLAY H1-ACCOUNT-STATUS
               DISPLAY H1-CUSTOMER-ID
               MOVE H1-ACCOUNT-NAME TO CUSTOMER-NAME
               COMPUTE CUSTOMER-ID = H1-CUSTOMER-ID
              WHEN 100
               MOVE "ACCT NO NOT REGISTERED WITH BANK" TO MESSAGES
               DISPLAY "WS-MESSAGES" MESSAGES
               EXEC CICS RETURN END-EXEC
              WHEN OTHER
               DISPLAY "SQLCODE1:" SQLCODE
               MOVE "SQL ERROR1" TO MESSAGES
               DISPLAY "WS-MESSAGES1:" MESSAGES
               EXEC CICS RETURN END-EXEC
            END-EVALUATE.

            EXEC SQL
            SELECT CURRENT TIMESTAMP INTO :WS-TIMESTAMP FROM
            SYSIBM.SYSDUMMY1
            END-EXEC.

            EXEC SQL
            SELECT * INTO :DCLCBS-ACCT-BAL-DTL
            FROM CBS_ACCT_BAL_DTL
            WHERE CUSTOMER_ID= :H1-CUSTOMER-ID
            END-EXEC.

            DISPLAY "SQLCODE:" SQLCODE

            EVALUATE SQLCODE
              WHEN 0
               DISPLAY H2-CUSTOMER-ID
               DISPLAY H2-DEBIT-AMOUNT
               DISPLAY H2-AVAILABLE-BALANCE
               DISPLAY H2-LEDGER-BALANCE
               DISPLAY H2-HOLD-BALANCE
      *         MOVE H2-AVAILABLE-BALANCE TO WS-AVAILABLE-BALANCE
      *         MOVE H2-LEDGER-BALANCE TO WS-LEDGER-BL
      *         MOVE H2-HOLD-BALANCE TO WS-HOLD-BALANCE
              WHEN 100
               MOVE "CUSTOMER ID MISMATCHING" TO MESSAGES
               DISPLAY "WS-MESSAGES" MESSAGES
               EXEC CICS RETURN END-EXEC
              WHEN OTHER
               DISPLAY "SQLCODE2:" SQLCODE
               MOVE "SQL ERROR2" TO MESSAGES
               DISPLAY "WS-MESSAGES2:" MESSAGES
               EXEC CICS RETURN END-EXEC
            COMPUTE H3-TRAN-AMOUNT = WS-TRAN-AMOUNT-T.
            COMPUTE H3-ACCOUNT-NUMBER = WS-ACCOUNT-NO-T.
            MOVE WS-TRANID TO H3-TRANSACTION-ID.
            EXEC SQL
             SELECT ACCOUNT_NUMBER, TRANSACTION_ID, TRAN_AMOUNT
             INTO :H3-ACCOUNT-NUMBER,
             :H3-TRANSACTION-ID,
             :H3-TRAN-AMOUNT
             FROM CBS_ACCT_TRAN_HSTRY_DTL
      *      EXEC SQL
      *      SELECT * INTO :DCLCBS-ACCT-TRAN-HSTRY-DTL FROM
      *       CBS_ACCT_HSTRY_DTL
            WHERE TRANSACTION_ID = :H3-TRANSACTION-ID AND
            ACCOUNT_NUMBER = :H3-ACCOUNT-NUMBER
      *      TRAN_AMOUNT = :H3-TRAN-AMOUNT
            END-EXEC.
            EVALUATE SQLCODE
              WHEN 0
               DISPLAY H3-ACCOUNT-NUMBER
               DISPLAY H3-TRANSACTION-ID
               DISPLAY H3-TRAN-AMOUNT
              WHEN 100
               MOVE "ERROR IN TRAN TABLE" TO MESSAGES
               DISPLAY "WS-MESSAGES" MESSAGES
               EXEC CICS RETURN END-EXEC
              WHEN OTHER
               DISPLAY "SQLCODE5:" SQLCODE
               MOVE "SQL ERROR5" TO MESSAGES
               DISPLAY "WS-MESSAGES2:" MESSAGES
               EXEC CICS RETURN END-EXEC
            END-EVALUATE.
        2000-DATA-ACCES-PARA-EXIT.
             EXIT.

        5000-BUSINES-VAL-PRA.
            IF WS-TRAN-AMOUNT-T IS NOT EQUAL TO H3-TRAN-AMOUNT THEN
               MOVE 10 TO WS-ERROR-CODE
               PERFORM 1000-ERROR-PARA THRU 1000-ERROR-PARA-EXIT
            END-IF.

            IF WS-TRANID IS NOT EQUAL TO H3-TRANSACTION-ID THEN
               MOVE 20 TO WS-ERROR-CODE
               PERFORM 1000-ERROR-PARA THRU 1000-ERROR-PARA-EXIT
            END-IF.
        5000-BUSINES-VAL-PRA-EXIT.
           EXIT.


        9000-MAIN-PARA.
      *     MOVE WS-ACCOUNT-NO-T TO H3-ACCOUNT-NUMBER.

           COMPUTE H2-AVAILABLE-BALANCE =
           H2-AVAILABLE-BALANCE + WS-TRAN-AMOUNT-T.
      *     MOVE WS-AVAIL TO H2-AVAILABLE-BALANCE
           COMPUTE H2-LEDGER-BALANCE =
           H2-HOLD-BALANCE + H2-AVAILABLE-BALANCE
      *     MOVE WS-LEDGER-BL TO H2-LEDGER-BALANCE
           COMPUTE H2-DEBIT-AMOUNT = WS-TRAN-AMOUNT-T
           MOVE WS-DATETIME(1:16) TO WS-TRANID.
           MOVE WS-TRANID TO H3-TRANSACTION-ID.
           DISPLAY "TRANSACTION-ID:" WS-TRANID.
           EXEC SQL
            UPDATE CBS_ACCT_BAL_DTL
              SET AVAILABLE_BALANCE = :H2-AVAILABLE-BALANCE,
              LEDGER_BALANCE = :H2-LEDGER-BALANCE,
              DEBIT_AMOUNT = :H2-DEBIT-AMOUNT
      *        UPD_TIMESTAMP =:WS-TIMESTAMP
              WHERE CUSTOMER_ID = :H2-CUSTOMER-ID
           END-EXEC.
            DISPLAY"SQLCODE" SQLCODE
           EVALUATE SQLCODE
              WHEN 0
                COMPUTE AVAILABLE-BALANCE = H2-AVAILABLE-BALANCE
                COMPUTE HOLD-BALANCE =H2-HOLD-BALANCE
                COMPUTE LEDGER-BL = H2-LEDGER-BALANCE
                MOVE H3-TRANSACTION-ID TO TRANSACTIONS-ID
                MOVE "AMOUNT REVERSED SUCCESSFULLY" TO MESSAGES
              WHEN OTHER
                MOVE "AMOUNT REVERSAL UNSUCCESSFULL" TO MESSAGES
                EXEC CICS RETURN END-EXEC
           END-EVALUATE.

           EXEC SQL
            INSERT INTO CBS_ACCT_TRAN_HSTRY_DTL
               VALUES (:H3-ACCOUNT-NUMBER, :H3-TRANSACTION-ID,
               :H2-DEBIT-AMOUNT,
               'CREDIT    ', 'SUCCESS   ')
           END-EXEC.

           EVALUATE SQLCODE
              WHEN 0
              EXEC SQL
            SELECT CURRENT TIME INTO :H1-ACCOUNT-STATUS FROM
            SYSIBM.SYSDUMMY1
            END-EXEC
            MOVE H1-ACCOUNT-STATUS TO SYS-TIME
            DISPLAY 'TIME'SYS-TIME

            EXEC SQL
            SELECT CURRENT DATE INTO :H1-ACCOUNT-STATUS FROM
            SYSIBM.SYSDUMMY1
            END-EXEC
            MOVE H1-ACCOUNT-STATUS TO SYS-DATE
            DISPLAY 'DATE'SYS-DATE
            MOVE WS-TRAN-AMOUNT-T TO CREDIT-AMOUNT-RES
                MOVE 'AMOUNT CREDITED SUCCESFULL' TO MESSAGES
                EXEC CICS RETURN END-EXEC
              WHEN OTHER
                MOVE "AMOUNT REVERSAL UNSUCCESSFULL" TO MESSAGES
                EXEC CICS RETURN END-EXEC
           END-EVALUATE.
        9000-MAIN-PARA-EXIT.
           EXIT.

         1000-ERROR-PARA.
           EVALUATE WS-ERROR-CODE
            WHEN 10
             MOVE "TRAN AMOUNT IS MISMATCHING" TO MESSAGES
             EXEC CICS RETURN END-EXEC
            WHEN 20
             MOVE "TRANSACTION ID IS MISMATCHING " TO MESSAGES
             EXEC CICS RETURN END-EXEC
           END-EVALUATE.
         1000-ERROR-PARA-EXIT.
           EXIT.
